{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0.0",
        "title": "DL-B24CRM-Producer-API",
        "description": "Produce data from B24 CRM"
    },
    "servers": [
        {
            "url": "https://swt-it-api.sanwell.biz/{basePath}",
            "description": "Test environment (external access)",
            "variables": {
                "basePath": {
                    "default": "b24crm"
                }
            }
        },
        {
            "url": "https://swt-it-api.sw.test/{basePath}",
            "description": "Test environment (internal access)",
            "variables": {
                "basePath": {
                    "default": "b24crm"
                }
            }
        },
        {
            "url": "https://it-api.sanwell.biz/{basePath}",
            "description": "Production environment",
            "variables": {
                "basePath": {
                    "default": "b24crm"
                }
            }
        }
    ],
    "paths": {
        "/entities/contacts": {
            "post": {
                "summary": "Posts 'New contact created' event",
                "description": "Creates and posts to Kafka an even of type 'New contact created'",
                "requestBody": {
                    "description": "Contact object been created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The contact creation event has been successfully posted to Kafka",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input parameters mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Posts 'Contact updated' event",
                "description": "Creates and posts to Kafka an even of type 'Contact updated'",
                "requestBody": {
                    "description": "Contact object been updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contact"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The contact updation event has been successfully posted to Kafka",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input parameters mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ClientAssociation": {
                "type": "object",
                "oneOf": [
                    {
                        "required": [
                            "clientAssociationType",
                            "counterparty"
                        ]
                    },
                    {
                        "required": [
                            "clientAssociationType",
                            "tradeOutlet"
                        ]
                    }
                ],
                "properties": {
                    "clientAssociationType": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 20,
                        "default": 7
                    },
                    "counterparty": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "tradeOutlet": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "Phone": {
                "type": "object",
                "required": [
                    "type",
                    "number"
                ],
                "properties": {
                    "type": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 9,
                        "default": 1
                    },
                    "number": {
                        "type":  "string",
                        "pattern": "^(38)?(0\\d{9}$)"
                    }
                }
            },
            "Email": {
                "type": "object",
                "required": [
                    "type",
                    "email"
                ],
                "properties": {
                    "type": {
                        "type": "integer",
                        "minimum": 100,
                        "maximum": 105,
                        "default": 100
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
                    }
                }
            },
            "Contact": {
                "type": "object",
                "oneOf": [
                    {
                        "required": [
                            "id",
                            "firstName",
                            "lastName",
                            "phones"
                        ]
                    },
                    {
                        "required": [
                            "id",
                            "firstName",
                            "lastName",
                            "emails"
                        ]
                    }
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "middleName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50,
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "type": "#/components/schemas/Phone"
                        },
                        "minItems": 1,
                        "nullable": true
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "type": "#/components/schemas/Email"
                        },
                        "minItems": 1,
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "gender": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "viber": {
                        "type": "string",
                        "pattern": "^(38)?(0\\d{9}$)",
                        "nullable": true
                    },
                    "whatsapp": {
                        "type": "string",
                        "pattern": "^(38)?(0\\d{9}$)",
                        "nullable": true
                    },
                    "telegram": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "skype": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "birthday": {
                        "type": "string",
                        "pattern": "^(19|20)\\d{2}-(0[1-9]|1[012])-(0[1-9]|[12]\\d|3[01])$",
                        "nullable": true
                    },
                    "prefLang": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 20,
                        "default": 1
                    },
                    "clientAssociations": {
                        "type": "array",
                        "items": {
                            "type": "#/components/schemas/ClientAssociation"
                        },
                        "minItems": 1,
                        "nullable": true
                    }
                }
            },
            "b24crm-producer-response": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "errorCode": {
                        "type": "integer"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "extendedInfo": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "basicAuth": []
        }
    ]
}