{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0.0",
        "title": "DL-B24CRM-Producer-API",
        "description": "Produce data from B24 CRM",
        "license": {
            "identifier": "MIT",
            "name": "MIT License"
        },
        "contact": {
            "name": "Ivan A. Malych",
            "email": "iam@sanwell.biz",
            "url": "www.linkedin.com/in/ivan-malych"
        }
    },
    "servers": [
        {
            "url": "https://swt-it-api.sanwell.biz/{basePath}",
            "description": "Test environment (external access)",
            "variables": {
                "basePath": {
                    "default": "b24crm"
                }
            }
        },
        {
            "url": "https://swt-it-api.sw.test/{basePath}",
            "description": "Test environment (internal access)",
            "variables": {
                "basePath": {
                    "default": "b24crm"
                }
            }
        },
        {
            "url": "https://it-api.sanwell.biz/{basePath}",
            "description": "Production environment",
            "variables": {
                "basePath": {
                    "default": "b24crm"
                }
            }
        }
    ],
    "paths": {
        "/entities/contacts": {
            "post": {
                "summary": "Posts 'New contact created' event",
                "description": "Creates and posts to Kafka an even of type 'New contact created'",
                "requestBody": {
                    "description": "Contact object been created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ContactWithPhones"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ContactWithEmails"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The contact creation event has been successfully posted to Kafka",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input parameters mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Posts 'Contact updated' event",
                "description": "Creates and posts to Kafka an even of type 'Contact updated'",
                "requestBody": {
                    "description": "Contact object been updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/ContactWithPhones"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ContactWithEmails"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The contact updation event has been successfully posted to Kafka",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input parameters mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/entities/counterparties": {
            "post": {
                "summary": "Posts 'New counterparty created' event",
                "description": "Creates and posts to Kafka an even of type 'New counterparty created'",
                "requestBody": {
                    "description": "Counterparty object been created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Counterparty"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The counterparty creation event has been successfully posted to Kafka",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input parameters mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Posts 'Counterparty updated' event",
                "description": "Creates and posts to Kafka an even of type 'Counterparty updated'",
                "requestBody": {
                    "description": "Counterparty object been updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Counterparty"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The counterparty updation event has been successfully posted to Kafka",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input parameters mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/entities/tradeoutlets": {
            "post": {
                "summary": "Posts 'New trade outlet created' event",
                "description": "Creates and posts to Kafka an even of type 'New trade outlet created'",
                "requestBody": {
                    "description": "TradeOutlet object been created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TradeOutlet"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The trade outlet creation event has been successfully posted to Kafka",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input parameters mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Posts 'Trade outlet updated' event",
                "description": "Creates and posts to Kafka an even of type 'Trade outlet updated'",
                "requestBody": {
                    "description": "TradeOutlet object been updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TradeOutlet"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The trade outlet updation event has been successfully posted to Kafka",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Input parameters mismatch",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error occured",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/b24crm-producer-response"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ClientAssociationCP": {
                "type": "object",
                "required": [
                    "clientAssociationType",
                    "counterparty"
                ],
                "properties": {
                    "clientAssociationType": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 20,
                        "default": 7
                    },
                    "counterparty": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "ClientAssociationTO": {
                "type": "object",
                "required": [
                    "clientAssociationType",
                    "tradeOutlet"
                ],
                "properties": {
                    "clientAssociationType": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 20,
                        "default": 7
                    },
                    "tradeOutlet": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "Phone": {
                "type": "object",
                "required": [
                    "type",
                    "number"
                ],
                "properties": {
                    "type": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 9,
                        "default": 1
                    },
                    "number": {
                        "type": "string",
                        "pattern": "^(38)?(0\\d{9}$)"
                    }
                }
            },
            "Email": {
                "type": "object",
                "required": [
                    "type",
                    "email"
                ],
                "properties": {
                    "type": {
                        "type": "integer",
                        "minimum": 100,
                        "maximum": 105,
                        "default": 100
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "pattern": "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$"
                    }
                }
            },
            "ContactWithPhones": {
                "type": "object",
                "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "phones"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "middleName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50,
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Phone"
                        },
                        "minItems": 1
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Email"
                        },
                        "minItems": 1,
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "gender": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "viber": {
                        "type": "string",
                        "pattern": "^(38)?(0\\d{9}$)",
                        "nullable": true
                    },
                    "whatsapp": {
                        "type": "string",
                        "pattern": "^(38)?(0\\d{9}$)",
                        "nullable": true
                    },
                    "telegram": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "skype": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "birthday": {
                        "type": "string",
                        "pattern": "^(19|20)\\d{2}-(0[1-9]|1[012])-(0[1-9]|[12]\\d|3[01])$",
                        "nullable": true
                    },
                    "prefLang": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 20,
                        "default": 1
                    },
                    "clientAssociations": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "$ref": "#/components/schemas/ClientAssociationCP"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/components/schemas/ClientAssociationTO"
                                }
                            ]
                        },
                        "minItems": 1,
                        "nullable": true
                    }
                }
            },
            "ContactWithEmails": {
                "type": "object",
                "required": [
                    "id",
                    "firstName",
                    "lastName",
                    "emails"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "middleName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50,
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Phone"
                        },
                        "minItems": 1,
                        "nullable": true
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Email"
                        },
                        "minItems": 1
                    },
                    "comment": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "gender": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "viber": {
                        "type": "string",
                        "pattern": "^(38)?(0\\d{9}$)",
                        "nullable": true
                    },
                    "whatsapp": {
                        "type": "string",
                        "pattern": "^(38)?(0\\d{9}$)",
                        "nullable": true
                    },
                    "telegram": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "skype": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "birthday": {
                        "type": "string",
                        "pattern": "^(19|20)\\d{2}-(0[1-9]|1[012])-(0[1-9]|[12]\\d|3[01])$",
                        "nullable": true
                    },
                    "prefLang": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 20,
                        "default": 1
                    },
                    "clientAssociations": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "$ref": "#/components/schemas/ClientAssociationCP"
                                },
                                {
                                    "type": "object",
                                    "$ref": "#/components/schemas/ClientAssociationTO"
                                }
                            ]
                        },
                        "minItems": 1,
                        "nullable": true
                    }
                }
            },
            "Counterparty": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "channel",
                    "inCharge"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 100
                    },
                    "fullName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 200,
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "financialBlock": {
                        "type": "boolean",
                        "default": false,
                        "nullable": true
                    },
                    "disabled": {
                        "type": "boolean",
                        "default": false,
                        "nullable": true
                    },
                    "channel": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "b2b": {
                        "type": "boolean",
                        "default": true,
                        "nullable": true
                    },
                    "inCharge": {
                        "type": "string",
                        "format": "LDAPid"
                    },
                    "supplier": {
                        "type": "boolean",
                        "default": false,
                        "nullable": true
                    },
                    "corporation": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "TradeOutlet": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "city",
                    "address",
                    "counterParty"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 100
                    },
                    "city": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "address": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 1024
                    },
                    "type": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9,
                        "nullable": true
                    },
                    "outOfOrder": {
                        "type": "boolean",
                        "default": false,
                        "nullable": true
                    },
                    "unloadPlace": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "bringIntoTheOutlet": {
                        "type": "boolean",
                        "default": false
                    },
                    "inCharge": {
                        "type": "string",
                        "format": "LDAPid",
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "commentForWH": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "commentForLogists": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "commentForSales": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "fixedUAH": {
                        "type": "boolean",
                        "default": false,
                        "nullable": true
                    },
                    "paymentDelay": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 24,
                        "nullable": true
                    },
                    "annoyanceDate": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "annoyanceComment": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1024,
                        "nullable": true
                    },
                    "counterParty": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "b24crm-producer-response": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "errorCode": {
                        "type": "integer"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "extendedInfo": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "basicAuth": []
        }
    ]
}